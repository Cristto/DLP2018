CATEGORIES
definition, expression, statement, type

NODES
program -> definiciones:definition*;

defVariable:definition -> ident:String tipo:type;
defFuncion:definition -> ident:String tipo:type defParametros:definition* defVarLocal:definition* sentencias:statement*;
defStruct:definition -> ident:String  campos:definition*;
defCampo:definition -> ident:String tipo:type;

ifElse:statement -> condicion:expression sentenciasIf:statement* sentenciasElse:statement*;
while:statement -> condicion:expression sentencias:statement*;
read:statement -> expresion:expression;
print:statement -> expresion:expression;
printsp:statement -> expresion:expression;
println:statement -> expresion:expression;
asignacion:statement -> leftExpr:expression rightExpr:expression;
return:statement -> expresion:expression;
invocacion:statement -> ident:String argumentos:expression*;

expresionAritmetica:expression -> leftExpr:expression operador:String rightExpr:expression;
comparacion:expression -> leftExpr:expression operador:String rightExpr:expression;
expresionLogica:expression -> leftExpr:expression operador:String rightExpr:expression;
menosUnario:expression -> operador:String expresion:expression;
not:expression -> operador:String expresion:expression;
accesoArray:expression -> ident:expression index:expression;
accesoStruct:expression -> ident:expression campo:String;
variable:expression -> ident:String;
llamadaFuncion:expression -> ident:String argumentos:expression*;
cast:expression -> tipo:type expresion:expression;
litInt:expression -> valor:int;
litReal:expression -> valor:float;
litChar:expression -> valor:char;

intTipo:type -> ;
realTipo:type -> ;
charTipo:type -> ;
IdentTipo:type ->  valor:String;
arrayTipo:type -> size:int tipo:type;
funcionTipo:type -> tipoRetorno:type;
voidTipo:type -> ;
